generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  is_active    Boolean   @default(true)
  is_admin     Boolean
  resettoken   String?
  expiresToken DateTime?
  is_acessall  Boolean   @default(false)
  nametoken    String?
  Event        Event[]
  NameKid      NameKid[]
}

model Event {
  id          Int           @id @default(autoincrement())
  status      Boolean       @default(false)
  title       String
  description String
  grouped     Boolean       @default(false)
  id_user     Int
  User        User          @relation(fields: [id_user], references: [id])
  EventGroup  EventGroup[]
  EventPeople EventPeople[]

  @@index([id_user], map: "Event_id_user_fkey")
}

model EventGroup {
  id          Int           @id @default(autoincrement())
  id_event    Int
  name        String
  event       Event         @relation(fields: [id_event], references: [id])
  EventPeople EventPeople[]

  @@index([id_event], map: "EventGroup_id_event_fkey")
}

model EventPeople {
  id       Int        @id @default(autoincrement())
  id_event Int
  id_group Int
  name     String
  cpf      String
  matched  String     @default("")
  event    Event      @relation(fields: [id_event], references: [id])
  group    EventGroup @relation(fields: [id_group], references: [id])

  @@index([id_event], map: "EventPeople_id_event_fkey")
  @@index([id_group], map: "EventPeople_id_group_fkey")
}

model NameKid {
  id             Int      @id @default(autoincrement())
  id_user        Int
  suggested_name String
  sex            Int
  description    String?
  createdAt      DateTime @default(now())
  User           User     @relation(fields: [id_user], references: [id])

  @@index([id_user], map: "NameKid_id_user_fkey")
}
